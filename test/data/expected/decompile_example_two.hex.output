Block 0x0
[0x0:0x1d]
---
Predecessors: []
Successors: [0x1e, 0x2a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH4 0xffffffff
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 AND
0x14 PUSH4 0x29d66542
0x19 DUP2
0x1a EQ
0x1b PUSH1 0x2a
0x1d JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xffffffff
0xa: V3 = 0xe0
0xc: V4 = 0x2
0xe: V5 = EXP 0x2 0xe0
0xf: V6 = 0x0
0x11: V7 = CALLDATALOAD 0x0
0x12: V8 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x13: V9 = AND V8 0xffffffff
0x14: V10 = 0x29d66542
0x1a: V11 = EQ V9 0x29d66542
0x1b: V12 = 0x2a
0x1d: JUMPI 0x2a V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x1e
[0x1e:0x27]
---
Predecessors: [0x0]
Successors: [0x28, 0x4c]
---
0x1e DUP1
0x1f PUSH4 0x6fd49314
0x24 EQ
0x25 PUSH1 0x4c
0x27 JUMPI
---
0x1f: V13 = 0x6fd49314
0x24: V14 = EQ 0x6fd49314 V9
0x25: V15 = 0x4c
0x27: JUMPI 0x4c V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x28
[0x28:0x29]
---
Predecessors: [0x1e]
Successors: []
---
0x28 JUMPDEST
0x29 INVALID
---
0x28: JUMPDEST 
0x29: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x2a
[0x2a:0x2f]
---
Predecessors: [0x0]
Successors: [0x30, 0x31]
---
0x2a JUMPDEST
0x2b CALLVALUE
0x2c ISZERO
0x2d PUSH1 0x31
0x2f JUMPI
---
0x2a: JUMPDEST 
0x2b: V16 = CALLVALUE
0x2c: V17 = ISZERO V16
0x2d: V18 = 0x31
0x2f: JUMPI 0x31 V17
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x30
[0x30:0x30]
---
Predecessors: [0x2a]
Successors: []
---
0x30 INVALID
---
0x30: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x31
[0x31:0x39]
---
Predecessors: [0x2a]
Successors: [0x6e]
---
0x31 JUMPDEST
0x32 PUSH1 0x3a
0x34 PUSH1 0x4
0x36 CALLDATALOAD
0x37 PUSH1 0x6e
0x39 JUMP
---
0x31: JUMPDEST 
0x32: V19 = 0x3a
0x34: V20 = 0x4
0x36: V21 = CALLDATALOAD 0x4
0x37: V22 = 0x6e
0x39: JUMP 0x6e
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x3a, V21]
Exit stack: [V9, 0x3a, V21]

================================

Block 0x3a
[0x3a:0x4b]
---
Predecessors: [0x7d, 0x91]
Successors: []
---
0x3a JUMPDEST
0x3b PUSH1 0x40
0x3d DUP1
0x3e MLOAD
0x3f SWAP2
0x40 DUP3
0x41 MSTORE
0x42 MLOAD
0x43 SWAP1
0x44 DUP2
0x45 SWAP1
0x46 SUB
0x47 PUSH1 0x20
0x49 ADD
0x4a SWAP1
0x4b RETURN
---
0x3a: JUMPDEST 
0x3b: V23 = 0x40
0x3e: V24 = M[0x40]
0x41: M[V24] = S0
0x42: V25 = M[0x40]
0x46: V26 = SUB V24 V25
0x47: V27 = 0x20
0x49: V28 = ADD 0x20 V26
0x4b: RETURN V25 V28
---
Entry stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, S1]

================================

Block 0x4c
[0x4c:0x51]
---
Predecessors: [0x1e]
Successors: [0x52, 0x53]
---
0x4c JUMPDEST
0x4d CALLVALUE
0x4e ISZERO
0x4f PUSH1 0x53
0x51 JUMPI
---
0x4c: JUMPDEST 
0x4d: V29 = CALLVALUE
0x4e: V30 = ISZERO V29
0x4f: V31 = 0x53
0x51: JUMPI 0x53 V30
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x52
[0x52:0x52]
---
Predecessors: [0x4c]
Successors: []
---
0x52 INVALID
---
0x52: INVALID 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x53
[0x53:0x5b]
---
Predecessors: [0x4c]
Successors: [0x82]
---
0x53 JUMPDEST
0x54 PUSH1 0x3a
0x56 PUSH1 0x4
0x58 CALLDATALOAD
0x59 PUSH1 0x82
0x5b JUMP
---
0x53: JUMPDEST 
0x54: V32 = 0x3a
0x56: V33 = 0x4
0x58: V34 = CALLDATALOAD 0x4
0x59: V35 = 0x82
0x5b: JUMP 0x82
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x3a, V34]
Exit stack: [V9, 0x3a, V34]

================================

Block 0x5c
[0x5c:0x6d]
---
Predecessors: []
Successors: []
---
0x5c JUMPDEST
0x5d PUSH1 0x40
0x5f DUP1
0x60 MLOAD
0x61 SWAP2
0x62 DUP3
0x63 MSTORE
0x64 MLOAD
0x65 SWAP1
0x66 DUP2
0x67 SWAP1
0x68 SUB
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d RETURN
---
0x5c: JUMPDEST 
0x5d: V36 = 0x40
0x60: V37 = M[0x40]
0x63: M[V37] = S0
0x64: V38 = M[0x40]
0x68: V39 = SUB V37 V38
0x69: V40 = 0x20
0x6b: V41 = ADD 0x20 V39
0x6d: RETURN V38 V41
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6e
[0x6e:0x76]
---
Predecessors: [0x31]
Successors: [0x96]
---
0x6e JUMPDEST
0x6f PUSH1 0x0
0x71 PUSH1 0x77
0x73 DUP3
0x74 PUSH1 0x96
0x76 JUMP
---
0x6e: JUMPDEST 
0x6f: V42 = 0x0
0x71: V43 = 0x77
0x74: V44 = 0x96
0x76: JUMP 0x96
---
Entry stack: [V9, 0x3a, V21]
Stack pops: 1
Stack additions: [S0, 0x0, 0x77, S0]
Exit stack: [V9, 0x3a, V21, 0x0, 0x77, V21]

================================

Block 0x77
[0x77:0x7c]
---
Predecessors: [0x7d]
Successors: [0x7d]
---
0x77 JUMPDEST
0x78 PUSH1 0x2
0x7a MUL
0x7b SWAP1
0x7c POP
---
0x77: JUMPDEST 
0x78: V45 = 0x2
0x7a: V46 = MUL 0x2 S0
---
Entry stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, S1, S0]
Stack pops: 2
Stack additions: [V46]
Exit stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, V46]

================================

Block 0x7d
[0x7d:0x81]
---
Predecessors: [0x77, 0xa1, 0xab, 0xc1, 0xce]
Successors: [0x3a, 0x77, 0x8b, 0xce]
---
0x7d JUMPDEST
0x7e SWAP2
0x7f SWAP1
0x80 POP
0x81 JUMP
---
0x7d: JUMPDEST 
0x81: JUMP {0x3a, 0x77, 0x8b, 0xce}
---
Entry stack: [V9, 0x3a, V34, S6, {0x3a, 0x8b}, S4, S3, {0x3a, 0x77, 0x8b, 0xce}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V9, 0x3a, V34, S6, {0x3a, 0x8b}, S4, S3, S0]

================================

Block 0x82
[0x82:0x8a]
---
Predecessors: [0x53]
Successors: [0xb8]
---
0x82 JUMPDEST
0x83 PUSH1 0x0
0x85 PUSH1 0x8b
0x87 DUP3
0x88 PUSH1 0xb8
0x8a JUMP
---
0x82: JUMPDEST 
0x83: V47 = 0x0
0x85: V48 = 0x8b
0x88: V49 = 0xb8
0x8a: JUMP 0xb8
---
Entry stack: [V9, 0x3a, V34]
Stack pops: 1
Stack additions: [S0, 0x0, 0x8b, S0]
Exit stack: [V9, 0x3a, V34, 0x0, 0x8b, V34]

================================

Block 0x8b
[0x8b:0x90]
---
Predecessors: [0x7d, 0x91]
Successors: [0x91]
---
0x8b JUMPDEST
0x8c PUSH1 0x1
0x8e ADD
0x8f SWAP1
0x90 POP
---
0x8b: JUMPDEST 
0x8c: V50 = 0x1
0x8e: V51 = ADD 0x1 S0
---
Entry stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, S1, S0]
Stack pops: 2
Stack additions: [V51]
Exit stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, V51]

================================

Block 0x91
[0x91:0x95]
---
Predecessors: [0x8b]
Successors: [0x3a, 0x8b]
---
0x91 JUMPDEST
0x92 SWAP2
0x93 SWAP1
0x94 POP
0x95 JUMP
---
0x91: JUMPDEST 
0x95: JUMP {0x3a, 0x8b}
---
Entry stack: [V9, 0x3a, V34, S3, {0x3a, 0x8b}, S1, V51]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V9, 0x3a, V34, S3, V51]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x6e, 0xc7]
Successors: [0xa1, 0xa7]
---
0x96 JUMPDEST
0x97 PUSH1 0x0
0x99 DUP2
0x9a PUSH1 0x3
0x9c EQ
0x9d ISZERO
0x9e PUSH1 0xa7
0xa0 JUMPI
---
0x96: JUMPDEST 
0x97: V52 = 0x0
0x9a: V53 = 0x3
0x9c: V54 = EQ 0x3 S0
0x9d: V55 = ISZERO V54
0x9e: V56 = 0xa7
0xa0: JUMPI 0xa7 V55
---
Entry stack: [V9, 0x3a, V34, S5, {0x3a, 0x8b}, S3, 0x0, {0x77, 0xce}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V9, 0x3a, V34, S5, {0x3a, 0x8b}, S3, 0x0, {0x77, 0xce}, S0, 0x0]

================================

Block 0xa1
[0xa1:0xa6]
---
Predecessors: [0x96]
Successors: [0x7d]
---
0xa1 POP
0xa2 PUSH1 0x5
0xa4 PUSH1 0x7d
0xa6 JUMP
---
0xa2: V57 = 0x5
0xa4: V58 = 0x7d
0xa6: JUMP 0x7d
---
Entry stack: [V9, 0x3a, V34, S6, {0x3a, 0x8b}, S4, 0x0, {0x77, 0xce}, S1, 0x0]
Stack pops: 1
Stack additions: [0x5]
Exit stack: [V9, 0x3a, V34, S6, {0x3a, 0x8b}, S4, 0x0, {0x77, 0xce}, S1, 0x5]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0x96]
Successors: [0xab]
---
0xa7 JUMPDEST
0xa8 PUSH1 0x2
0xaa DUP3
---
0xa7: JUMPDEST 
0xa8: V59 = 0x2
---
Entry stack: [V9, 0x3a, V34, S6, {0x3a, 0x8b}, S4, 0x0, {0x77, 0xce}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x2, S1]
Exit stack: [V9, 0x3a, V34, S6, {0x3a, 0x8b}, S4, 0x0, {0x77, 0xce}, S1, 0x0, 0x2, S1]

================================

Block 0xab
[0xab:0xb1]
---
Predecessors: [0xa7]
Successors: [0x7d]
---
0xab JUMPDEST
0xac SDIV
0xad SWAP1
0xae POP
0xaf PUSH1 0x7d
0xb1 JUMP
---
0xab: JUMPDEST 
0xac: V60 = SDIV S0 0x2
0xaf: V61 = 0x7d
0xb1: JUMP 0x7d
---
Entry stack: [V9, 0x3a, V34, S8, {0x3a, 0x8b}, S6, 0x0, {0x77, 0xce}, S3, 0x0, 0x2, S0]
Stack pops: 3
Stack additions: [V60]
Exit stack: [V9, 0x3a, V34, S8, {0x3a, 0x8b}, S6, 0x0, {0x77, 0xce}, S3, V60]

================================

Block 0xb2
[0xb2:0xb2]
---
Predecessors: []
Successors: [0xb3]
---
0xb2 JUMPDEST
---
0xb2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb3
[0xb3:0xb7]
---
Predecessors: [0xb2]
Successors: []
Has unresolved jump.
---
0xb3 JUMPDEST
0xb4 SWAP2
0xb5 SWAP1
0xb6 POP
0xb7 JUMP
---
0xb3: JUMPDEST 
0xb7: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xb8
[0xb8:0xc0]
---
Predecessors: [0x82]
Successors: [0xc1, 0xc7]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x0
0xbb DUP2
0xbc ISZERO
0xbd ISZERO
0xbe PUSH1 0xc7
0xc0 JUMPI
---
0xb8: JUMPDEST 
0xb9: V62 = 0x0
0xbc: V63 = ISZERO V34
0xbd: V64 = ISZERO V63
0xbe: V65 = 0xc7
0xc0: JUMPI 0xc7 V64
---
Entry stack: [V9, 0x3a, V34, 0x0, 0x8b, V34]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V9, 0x3a, V34, 0x0, 0x8b, V34, 0x0]

================================

Block 0xc1
[0xc1:0xc6]
---
Predecessors: [0xb8]
Successors: [0x7d]
---
0xc1 POP
0xc2 PUSH1 0x1
0xc4 PUSH1 0x7d
0xc6 JUMP
---
0xc2: V66 = 0x1
0xc4: V67 = 0x7d
0xc6: JUMP 0x7d
---
Entry stack: [V9, 0x3a, V34, 0x0, 0x8b, V34, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V9, 0x3a, V34, 0x0, 0x8b, V34, 0x1]

================================

Block 0xc7
[0xc7:0xcd]
---
Predecessors: [0xb8]
Successors: [0x96]
---
0xc7 JUMPDEST
0xc8 PUSH1 0xce
0xca DUP3
0xcb PUSH1 0x96
0xcd JUMP
---
0xc7: JUMPDEST 
0xc8: V68 = 0xce
0xcb: V69 = 0x96
0xcd: JUMP 0x96
---
Entry stack: [V9, 0x3a, V34, 0x0, 0x8b, V34, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xce, S1]
Exit stack: [V9, 0x3a, V34, 0x0, 0x8b, V34, 0x0, 0xce, V34]

================================

Block 0xce
[0xce:0xd3]
---
Predecessors: [0x7d]
Successors: [0x7d]
---
0xce JUMPDEST
0xcf SWAP1
0xd0 POP
0xd1 PUSH1 0x7d
0xd3 JUMP
---
0xce: JUMPDEST 
0xd1: V70 = 0x7d
0xd3: JUMP 0x7d
---
Entry stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V9, 0x3a, V34, S4, {0x3a, 0x8b}, S2, S0]

================================

Block 0xd4
[0xd4:0xd4]
---
Predecessors: []
Successors: [0xd5]
---
0xd4 JUMPDEST
---
0xd4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd5
[0xd5:0x105]
---
Predecessors: [0xd4]
Successors: []
---
0xd5 JUMPDEST
0xd6 SWAP2
0xd7 SWAP1
0xd8 POP
0xd9 JUMP
0xda STOP
0xdb LOG1
0xdc PUSH6 0x627a7a723058
0xe3 SHA3
0xe4 MISSING 0x48
0xe5 NOT
0xe6 PUSH18 0x1fdc8c6ed871077e7c3191247d6e3b9c1979
0xf9 MISSING 0xe7
0xfa DUP10
0xfb EXTCODECOPY
0xfc MISSING 0x2d
0xfd MISSING 0xf9
0xfe MISSING 0x2c
0xff SLOAD
0x100 LOG1
0x101 BYTE
0x102 CALLDATACOPY
0x103 MISSING 0xf7
0x104 STOP
0x105 MISSING 0x29
---
0xd5: JUMPDEST 
0xd9: JUMP S2
0xda: STOP 
0xdb: LOG S0 S1 S2
0xdc: V71 = 0x627a7a723058
0xe3: V72 = SHA3 0x627a7a723058 S3
0xe4: MISSING 0x48
0xe5: V73 = NOT S0
0xe6: V74 = 0x1fdc8c6ed871077e7c3191247d6e3b9c1979
0xf9: MISSING 0xe7
0xfb: EXTCODECOPY S9 S0 S1 S2
0xfc: MISSING 0x2d
0xfd: MISSING 0xf9
0xfe: MISSING 0x2c
0xff: V75 = S[S0]
0x100: LOG V75 S1 S2
0x101: V76 = BYTE S3 S4
0x102: CALLDATACOPY V76 S5 S6
0x103: MISSING 0xf7
0x104: STOP 
0x105: MISSING 0x29
---
Entry stack: []
Stack pops: 1040
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x29d66542
Entry block: 0x2a
Exit block: 0x3a
Body: 0x2a, 0x30, 0x31, 0x3a, 0x6e, 0x77

Function 1:
Public function signature: 0x6fd49314
Entry block: 0x4c
Exit block: 0x3a
Body: 0x3a, 0x4c, 0x52, 0x53, 0x82, 0x8b, 0x91, 0xb8, 0xc1, 0xc7, 0xce

Function 2:
Public fallback function
Entry block: 0x28
Exit block: 0x28
Body: 0x28

Function 3:
Private function
Entry block: 0x96
Exit block: 0x7d
Body: 0x7d, 0x96, 0xa1, 0xa7, 0xab

